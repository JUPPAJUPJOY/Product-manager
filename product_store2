class Product:
    def __init__(self, name, quantity):
        self.name = name
        self.quantity = quantity


class Store:
    def __init__(self):
        self.__products = []

    def add_product(self, name, quantity):
        # ‡∏ñ‡πâ‡∏≤‡∏Å‡∏≤‡πÅ‡∏ü‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏Å‡πâ‡∏ß‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
        for product in self.__products:
            if product.name.lower() == name.lower():
                product.quantity += quantity
                print(f"‚úÖ ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏Å‡∏≤‡πÅ‡∏ü '{product.name}' ‡∏≠‡∏µ‡∏Å {quantity} ‡πÅ‡∏Å‡πâ‡∏ß (‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏£‡∏ß‡∏° {product.quantity} ‡πÅ‡∏Å‡πâ‡∏ß)")
                return
        # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
        product = Product(name, quantity)
        self.__products.append(product)
        print(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏≤‡πÅ‡∏ü‡πÉ‡∏´‡∏°‡πà: {product.name} - {product.quantity} ‡πÅ‡∏Å‡πâ‡∏ß")

    def show_products(self):
        print("\nüìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡πÅ‡∏ü‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô:")
        if not self.__products:
            print("‚ö†Ô∏è ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡πÅ‡∏ü‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")
        else:
            for i, product in enumerate(self.__products, start=1):
                print(f"{i}. {product.name} - ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {product.quantity} ‡πÅ‡∏Å‡πâ‡∏ß")

    def update_quantity(self, name, new_quantity):
        for product in self.__products:
            if product.name.lower() == name.lower():
                product.quantity = new_quantity
                print(f"‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡πÅ‡∏ü '{product.name}' ‡πÄ‡∏õ‡πá‡∏ô {new_quantity} ‡πÅ‡∏Å‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
                return
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡πÅ‡∏ü‡∏ä‡∏∑‡πà‡∏≠ '{name}' ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")

    def delete_product(self, name):
        for product in self.__products:
            if product.name.lower() == name.lower():
                self.__products.remove(product)
                print(f"‚úÖ ‡∏•‡∏ö‡∏Å‡∏≤‡πÅ‡∏ü '{name}' ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
                return
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡πÅ‡∏ü‡∏ä‡∏∑‡πà‡∏≠ '{name}' ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")

    def search_product(self, name):
        found = False
        print(f"\nüîç ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏≤‡πÅ‡∏ü‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ '{name}':")
        for product in self.__products:
            if name.lower() in product.name.lower():
                print(f"- {product.name} (‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {product.quantity} ‡πÅ‡∏Å‡πâ‡∏ß)")
                found = True
        if not found:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡πÅ‡∏ü‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤")


def main():
    store = Store()

    while True:
        print("\nüìå ‡πÄ‡∏°‡∏ô‡∏π‡∏£‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡πÅ‡∏ü")
        print("1. ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πá‡∏≠‡∏Å/‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡πÅ‡∏ü")
        print("2. ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡πÅ‡∏ü‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
        print("3. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏Å‡πâ‡∏ß‡∏Å‡∏≤‡πÅ‡∏ü")
        print("4. ‡∏•‡∏ö‡∏Å‡∏≤‡πÅ‡∏ü")
        print("5. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏≤‡πÅ‡∏ü")
        print("6. ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö")

        choice = input("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π (1-6): ").strip()

        if choice == '1':
            name = input("‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡πÅ‡∏ü: ").strip()
            try:
                quantity = int(input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏Å‡πâ‡∏ß‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏¥‡∏°: "))
                if quantity <= 0:
                    print("‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0")
                    continue
                store.add_product(name, quantity)
            except ValueError:
                print("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç")
        elif choice == '2':
            store.show_products()
        elif choice == '3':
            name = input("‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡πÅ‡∏ü‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ").strip()
            try:
                new_quantity = int(input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏Å‡πâ‡∏ß‡πÉ‡∏´‡∏°‡πà: "))
                if new_quantity < 0:
                    print("‚ùå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î‡∏•‡∏ö")
                    continue
                store.update_quantity(name, new_quantity)
            except ValueError:
                print("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç")
        elif choice == '4':
            name = input("‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡πÅ‡∏ü‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö: ").strip()
            store.delete_product(name)
        elif choice == '5':
            name = input("‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏≤‡πÅ‡∏ü‡πÇ‡∏î‡∏¢‡∏ä‡∏∑‡πà‡∏≠: ").strip()
            store.search_product(name)
        elif choice == '6':
            print("üëã ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡πÅ‡∏ü ‡∏≠‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö")
            break
        else:
            print("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (1-6)")


if __name__ == "__main__":
    main()